<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.rambo.erian,com.rambo.mysql,com.rambo.spms">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.rambo.erian" />
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- show sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- very important to define an unique value for property 'hibernate.ejb.entitymanager_factory_name' or error will occured -->
				<prop key="hibernate.ejb.entitymanager_factory_name">springside</prop>
			</props>
		</property>
	</bean>


	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect"
				class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="mysqlDataSource" />
			</bean>		
		</property>
	</bean>

	<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.rambo.erian"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<!-- default entity manager -->
		<qualifier value="defaultEM" />		
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />




	<!--########################MySql################################# -->
	


	<bean id="mysqlEntityManagerFactory" name="mysql"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<!-- 		<property name="persistenceUnitManager" ref="defaultPersistenceUnitManager" />
		<property name="persistenceUnitName" value="mysql" /> -->
		<property name="dataSource" ref="mysqlDataSource" />
		<!-- very inportant  -->
		<property name="packagesToScan" value="com.rambo.mysql" />
		<property name="jpaVendorAdapter" ref="mysqlJpaVendor" />
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		 <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect">
            </bean>
        </property>
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- show sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- very important to define an unique value for property 'hibernate.ejb.entitymanager_factory_name' or error will occured -->
				<prop key="hibernate.ejb.entitymanager_factory_name">mysql</prop>
			</props>
		</property>
	</bean>
	

	<bean id="mysqlJpaVendor"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true" />
		<property name="generateDdl" value="true" />

	</bean>
	
	
	<!-- Jpa 事务配置 -->
	<bean id="mysqlTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="mysqlEntityManagerFactory" />
		<qualifier value="mysqlEM" />
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
	</bean>

<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.rambo.mysql"
		transaction-manager-ref="mysqlTransactionManager"
		entity-manager-factory-ref="mysqlEntityManagerFactory" />
		
<tx:annotation-driven transaction-manager="mysqlEntityManagerFactory" proxy-target-class="true" />



	<!--########################SPMS MySql################################# -->
	


	<bean id="spmsEntityManagerFactory" name="spms"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<!-- 		<property name="persistenceUnitManager" ref="defaultPersistenceUnitManager" />
		<property name="persistenceUnitName" value="mysql" /> -->
		<property name="dataSource" ref="spmsDataSource" />
		<!-- very inportant  -->
		<property name="packagesToScan" value="com.rambo.spms" />
		<property name="jpaVendorAdapter" ref="spmsJpaVendor" />
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		 <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect">
            </bean>
        </property>
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- show sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- very important to define an unique value for property 'hibernate.ejb.entitymanager_factory_name' or error will occured -->
				<prop key="hibernate.ejb.entitymanager_factory_name">spms</prop>
			</props>
		</property>
	</bean>
	

	<bean id="spmsJpaVendor"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true" />
		<property name="generateDdl" value="true" />

	</bean>
	
	
	<!-- Jpa 事务配置 -->
	<bean id="spmsTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="mysqlEntityManagerFactory" />
		<qualifier value="spmsEM" />
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
	</bean>

<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.rambo.spms"
		transaction-manager-ref="spmsTransactionManager"
		entity-manager-factory-ref="spmsEntityManagerFactory" />
		
<tx:annotation-driven transaction-manager="spmsEntityManagerFactory" proxy-target-class="true" />





	<!-- JSR303 Validator定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" location="classpath*:/application.properties" />

		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="minIdle" value="0" />
			<property name="defaultAutoCommit" value="false" />
		</bean>

	<bean id="mysqlDataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
			<property name="driverClassName" value="${mysql.jdbc.driver}" />
			<property name="url" value="${mysql.jdbc.url}" />
			<property name="username" value="root" />
			<property name="password" value="s3cret" />
			<property name="defaultAutoCommit" value="false" />
			
			<property name="initialSize" value="1" />
			<property name="maxActive" value="100" />
			<property name="maxIdle" value="8" />
			<property name="minIdle" value="1" />
		</bean>

		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" 
			/> -->
	</beans>

	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.development.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		
		<bean id="mysqlDataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
			<property name="driverClassName" value="${mysql.jdbc.driver}" />
			<property name="url" value="${mysql.jdbc.url}" />
			<property name="username" value="root" />
			<property name="password" value="s3cret" />
			<property name="defaultAutoCommit" value="false" />
			
			<property name="initialSize" value="1" />
			<property name="maxActive" value="100" />
			<property name="maxIdle" value="8" />
			<property name="minIdle" value="1" />
		</bean>
		
			<bean id="spmsDataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
			<property name="driverClassName" value="${mysql.jdbc.driver}" />
			<property name="url" value="jdbc:mysql://172.19.209.15:3306/ict_data_raw?useUnicode=true&amp;characterEncoding=UTF-8" />
			<property name="username" value="root" />
			<property name="password" value="whying123" />
			<property name="defaultAutoCommit" value="false" />
			
			<property name="initialSize" value="1" />
			<property name="maxActive" value="100" />
			<property name="maxIdle" value="8" />
			<property name="minIdle" value="1" />
		</bean>
		
	</beans>

	<!-- functional test 环境 -->
	<beans profile="functional">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.functional.properties,
          			  classpath*:/application.functional-local.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>

	<bean id="mysqlDataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
			<property name="driverClassName" value="${mysql.jdbc.driver}" />
			<property name="url" value="${mysql.jdbc.url}" />
			<property name="username" value="root" />
			<property name="password" value="s3cret" />
			<property name="defaultAutoCommit" value="false" />
			
			<property name="initialSize" value="1" />
			<property name="maxActive" value="100" />
			<property name="maxIdle" value="8" />
			<property name="minIdle" value="1" />
		</bean>

		<!-- 初始化数据表结构 -->
<!-- 		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="ALL">
			<jdbc:script location="classpath:sql/${db.type}/schema.sql" />
		</jdbc:initialize-database> -->
	</beans>

	<!-- unit test环境 -->
	<beans profile="test">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.test.properties" />

		<!-- Spring Simple连接池 -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>

		<!-- 初始化数据表结构 与默认数据 -->
		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="ALL">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
			<jdbc:script location="classpath:data/h2/import-data.sql"
				encoding="UTF-8" />
		</jdbc:initialize-database>
	</beans>
</beans>